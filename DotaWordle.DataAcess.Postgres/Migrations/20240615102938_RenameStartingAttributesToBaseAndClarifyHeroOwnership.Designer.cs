// <auto-generated />
using DotaWordle.DataAcess.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DotaWordle.DataAcess.Postgres.Migrations
{
    [DbContext(typeof(HeroesDbContext))]
    [Migration("20240615102938_RenameStartingAttributesToBaseAndClarifyHeroOwnership")]
    partial class RenameStartingAttributesToBaseAndClarifyHeroOwnership
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("AgilityBase")
                        .HasColumnType("real");

                    b.Property<float>("ArmorBase")
                        .HasColumnType("real");

                    b.Property<float>("AttackRange")
                        .HasColumnType("real");

                    b.Property<string>("AttackType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Complexity")
                        .HasColumnType("smallint");

                    b.Property<float>("DamageMaxBase")
                        .HasColumnType("real");

                    b.Property<float>("DamageMinBase")
                        .HasColumnType("real");

                    b.Property<int>("GameVersion")
                        .HasColumnType("integer");

                    b.Property<float>("IntelligenceBase")
                        .HasColumnType("real");

                    b.Property<float>("MoveSpeedBase")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrimaryAttributeId")
                        .HasColumnType("integer");

                    b.Property<float>("StrengthBase")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryAttributeId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroPrimaryAttributeEntity", b =>
                {
                    b.Property<int>("HeroPrimaryAttributeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HeroPrimaryAttributeId");

                    b.ToTable("HeroPrimaryAttributes");

                    b.HasData(
                        new
                        {
                            HeroPrimaryAttributeId = 0,
                            Name = "Strength"
                        },
                        new
                        {
                            HeroPrimaryAttributeId = 1,
                            Name = "Agility"
                        },
                        new
                        {
                            HeroPrimaryAttributeId = 2,
                            Name = "Intelligence"
                        },
                        new
                        {
                            HeroPrimaryAttributeId = 3,
                            Name = "All"
                        });
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroRoleEntity", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<int>("HeroRoleTypeId")
                        .HasColumnType("integer");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.HasKey("HeroId", "HeroRoleTypeId");

                    b.HasIndex("HeroRoleTypeId");

                    b.ToTable("HeroRoles");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroRoleTypeEntity", b =>
                {
                    b.Property<int>("HeroRoleTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HeroRoleTypeId");

                    b.ToTable("HeroRoleTypes");

                    b.HasData(
                        new
                        {
                            HeroRoleTypeId = 0,
                            Name = "Carry"
                        },
                        new
                        {
                            HeroRoleTypeId = 1,
                            Name = "Disabler"
                        },
                        new
                        {
                            HeroRoleTypeId = 2,
                            Name = "Durable"
                        },
                        new
                        {
                            HeroRoleTypeId = 3,
                            Name = "Escape"
                        },
                        new
                        {
                            HeroRoleTypeId = 4,
                            Name = "Initiator"
                        },
                        new
                        {
                            HeroRoleTypeId = 5,
                            Name = "Jungler"
                        },
                        new
                        {
                            HeroRoleTypeId = 6,
                            Name = "Pusher"
                        },
                        new
                        {
                            HeroRoleTypeId = 7,
                            Name = "Nuker"
                        },
                        new
                        {
                            HeroRoleTypeId = 8,
                            Name = "Support"
                        });
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroWeekWinrateEntity", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<int>("RankBracketId")
                        .HasColumnType("integer");

                    b.Property<long>("Matches")
                        .HasColumnType("bigint");

                    b.Property<long>("Wins")
                        .HasColumnType("bigint");

                    b.HasKey("HeroId", "RankBracketId");

                    b.HasIndex("RankBracketId");

                    b.ToTable("HeroWeekWinrates");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.RankBracketEntity", b =>
                {
                    b.Property<int>("RankBracketId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RankBracketId");

                    b.ToTable("RankBrackets");

                    b.HasData(
                        new
                        {
                            RankBracketId = 0,
                            Name = "Herald"
                        },
                        new
                        {
                            RankBracketId = 1,
                            Name = "Guardian"
                        },
                        new
                        {
                            RankBracketId = 2,
                            Name = "Crusader"
                        },
                        new
                        {
                            RankBracketId = 3,
                            Name = "Archon"
                        },
                        new
                        {
                            RankBracketId = 4,
                            Name = "Legend"
                        },
                        new
                        {
                            RankBracketId = 5,
                            Name = "Ancient"
                        },
                        new
                        {
                            RankBracketId = 6,
                            Name = "Divine"
                        },
                        new
                        {
                            RankBracketId = 7,
                            Name = "Immortal"
                        },
                        new
                        {
                            RankBracketId = 8,
                            Name = "Unknown"
                        },
                        new
                        {
                            RankBracketId = 9,
                            Name = "All"
                        });
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroEntity", b =>
                {
                    b.HasOne("DotaWordle.DataAcess.Postgres.Models.HeroPrimaryAttributeEntity", "PrimaryAttribute")
                        .WithMany("Heroes")
                        .HasForeignKey("PrimaryAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryAttribute");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroRoleEntity", b =>
                {
                    b.HasOne("DotaWordle.DataAcess.Postgres.Models.HeroEntity", "Hero")
                        .WithMany("Roles")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotaWordle.DataAcess.Postgres.Models.HeroRoleTypeEntity", "RoleType")
                        .WithMany("Roles")
                        .HasForeignKey("HeroRoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("RoleType");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroWeekWinrateEntity", b =>
                {
                    b.HasOne("DotaWordle.DataAcess.Postgres.Models.HeroEntity", "Hero")
                        .WithMany("WeekWinrates")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotaWordle.DataAcess.Postgres.Models.RankBracketEntity", "RankBracket")
                        .WithMany("WeekWinrates")
                        .HasForeignKey("RankBracketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("RankBracket");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroEntity", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("WeekWinrates");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroPrimaryAttributeEntity", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.HeroRoleTypeEntity", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DotaWordle.DataAcess.Postgres.Models.RankBracketEntity", b =>
                {
                    b.Navigation("WeekWinrates");
                });
#pragma warning restore 612, 618
        }
    }
}
